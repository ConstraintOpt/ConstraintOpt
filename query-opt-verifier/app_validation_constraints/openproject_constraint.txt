Constraint(Journal::ChangesetJournal, fk(journal_id, Journal))
Constraint(Journal::ChangesetJournal, fk(author_id, User))
Constraint(Journal::WikiContentJournal, fk(journal_id, Journal))
Constraint(Journal::WikiContentJournal, fk(author_id, User))
Constraint(Journal::WorkPackageJournal, fk(journal_id, Journal))
Constraint(Journal::WorkPackageJournal, fk(author_id, User))
Constraint(Journal::BaseJournal, fk(journal_id, Journal))
Constraint(Journal::BaseJournal, fk(author_id, User))
Constraint(Journal::AttachableJournal, fk(attachment_id, Attachment))
Constraint(Journal::AttachableJournal, fk(journal_id, Journal))
Constraint(Journal::AttachableJournal, fk(author_id, User))
Constraint(Journal::NewsJournal, fk(journal_id, Journal))
Constraint(Journal::NewsJournal, fk(author_id, User))
Constraint(Journal::CustomizableJournal, fk(custom_field_id, CustomField))
Constraint(Journal::CustomizableJournal, fk(journal_id, Journal))
Constraint(Journal::CustomizableJournal, fk(author_id, User))
Constraint(Journal::AttachmentJournal, fk(journal_id, Journal))
Constraint(Journal::AttachmentJournal, fk(author_id, User))
Constraint(Journal::MessageJournal, fk(journal_id, Journal))
Constraint(Journal::MessageJournal, fk(author_id, User))
Constraint(Journal::TimeEntryJournal, fk(journal_id, Journal))
Constraint(Journal::TimeEntryJournal, fk(author_id, User))
Constraint(Token::Base, fk(user_id, User))
Constraint(Token::Invitation, fk(user_id, User))
Constraint(Token::HashedToken, fk(user_id, User))
Constraint(Token::API, fk(user_id, User))
Constraint(Token::AutoLogin, fk(user_id, User))
Constraint(Token::Recovery, fk(user_id, User))
Constraint(Token::RSS, fk(user_id, User))
Constraint(Change, fk(changeset_id, Changeset))
Constraint(News, fk(project_id, Project))
Constraint(News, fk(author_id, User))
Constraint(IssuePriority, fk(color_id, Color))
Constraint(IssuePriority, fk(project_id, Project))
Constraint(Wiki, fk(project_id, Project))
Constraint(MenuItems::WikiMenuItem, fk(wiki_id, Wiki))
Constraint(MenuItems::WikiMenuItem, fk(parent_id, MenuItem))
Constraint(MenuItems::QueryMenuItem, fk(query_id, Query))
Constraint(MenuItems::QueryMenuItem, fk(parent_id, MenuItem))
Constraint(WorkPackage::InexistentWorkPackage, fk(project_id, Project))
Constraint(WorkPackage::InexistentWorkPackage, fk(type_id, WorkPackage))
Constraint(WorkPackage::InexistentWorkPackage, fk(status_id, Status))
Constraint(WorkPackage::InexistentWorkPackage, fk(author_id, User))
Constraint(WorkPackage::InexistentWorkPackage, fk(assigned_to_id, Principal))
Constraint(WorkPackage::InexistentWorkPackage, fk(responsible_id, Principal))
Constraint(WorkPackage::InexistentWorkPackage, fk(version_id, Version))
Constraint(WorkPackage::InexistentWorkPackage, fk(priority_id, IssuePriority))
Constraint(WorkPackage::InexistentWorkPackage, fk(category_id, Category))
Constraint(Repository::Subversion, fk(project_id, Project))
Constraint(Repository::Git, fk(project_id, Project))
Constraint(Category, fk(project_id, Project))
Constraint(Category, fk(assigned_to_id, Principal))
Constraint(Project, fk(repository_id, Repository))
Constraint(Project, fk(wiki_id, Wiki))
Constraint(Project, fk(status_id, Projects::Status))
Constraint(Status, fk(color_id, Color))
Constraint(CustomOption, fk(custom_field_id, CustomField))
Constraint(UserSession, fk(user_id, User))
Constraint(WikiContent, fk(page_id, WikiPage))
Constraint(WikiContent, fk(author_id, User))
Constraint(Workflow, fk(role_id, Role))
Constraint(Workflow, fk(old_status_id, Status))
Constraint(Workflow, fk(new_status_id, Status))
Constraint(Workflow, fk(type_id, Workflow))
Constraint(Watcher, fk(watchable_id, Watcher))
Constraint(Watcher, fk(user_id, User))
Constraint(Repository, fk(project_id, Project))
Constraint(DeletedUser, fk(rss_token_id, User))
Constraint(DeletedUser, fk(api_token_id, User))
Constraint(DeletedUser, fk(auth_source_id, AuthSource))
Constraint(DeletedUser, fk(preference_id, UserPreference))
Constraint(LegacyJournal, fk(journaled_id, Journal))
Constraint(LegacyJournal, fk(user_id, User))
Constraint(SystemUser, fk(rss_token_id, User))
Constraint(SystemUser, fk(api_token_id, User))
Constraint(SystemUser, fk(auth_source_id, AuthSource))
Constraint(SystemUser, fk(preference_id, UserPreference))
Constraint(Forum, fk(project_id, Project))
Constraint(Forum, fk(last_message_id, Message))
Constraint(EnabledModule, fk(project_id, Project))
Constraint(Projects::Status, fk(project_id, Project))
Constraint(Group, fk(preference_id, UserPreference))
Constraint(OrderedWorkPackage, fk(query_id, Query))
Constraint(OrderedWorkPackage, fk(work_package_id, WorkPackage))
Constraint(User::InexistentUser, fk(rss_token_id, User))
Constraint(User::InexistentUser, fk(api_token_id, User))
Constraint(User::InexistentUser, fk(auth_source_id, AuthSource))
Constraint(User::InexistentUser, fk(preference_id, UserPreference))
Constraint(User, fk(rss_token_id, User))
Constraint(User, fk(api_token_id, User))
Constraint(User, fk(auth_source_id, AuthSource))
Constraint(User, fk(preference_id, UserPreference))
Constraint(Status::InexistentStatus, fk(color_id, Color))
Constraint(WikiPage, fk(wiki_id, Wiki))
Constraint(WikiPage, fk(project_id, Project))
Constraint(WikiPage, fk(content_id, WikiContent))
Constraint(Attachment, fk(container_id, Attachment))
Constraint(Attachment, fk(author_id, User))
Constraint(Message, fk(forum_id, Forum))
Constraint(Message, fk(project_id, Project))
Constraint(Message, fk(author_id, User))
Constraint(Message, fk(last_reply_id, Message))
Constraint(Member, fk(principal_id, Principal))
Constraint(Member, fk(project_id, Project))
Constraint(UserPassword, fk(user_id, User))
Constraint(AnonymousUser, fk(rss_token_id, User))
Constraint(AnonymousUser, fk(api_token_id, User))
Constraint(AnonymousUser, fk(auth_source_id, AuthSource))
Constraint(AnonymousUser, fk(preference_id, UserPreference))
Constraint(WorkPackage, fk(project_id, Project))
Constraint(WorkPackage, fk(type_id, WorkPackage))
Constraint(WorkPackage, fk(status_id, Status))
Constraint(WorkPackage, fk(author_id, User))
Constraint(WorkPackage, fk(assigned_to_id, Principal))
Constraint(WorkPackage, fk(responsible_id, Principal))
Constraint(WorkPackage, fk(version_id, Version))
Constraint(WorkPackage, fk(priority_id, IssuePriority))
Constraint(WorkPackage, fk(category_id, Category))
Constraint(Changeset, fk(repository_id, Repository))
Constraint(Changeset, fk(user_id, User))
Constraint(::Type, fk(color_id, Color))
Constraint(UserPreference, fk(user_id, User))
Constraint(UserPassword::Bcrypt, fk(user_id, User))
Constraint(UserPassword::SHA1, fk(user_id, User))
Constraint(TimeEntryActivity, fk(project_id, Project))
Constraint(TimeEntry, fk(project_id, Project))
Constraint(TimeEntry, fk(work_package_id, WorkPackage))
Constraint(TimeEntry, fk(user_id, User))
Constraint(TimeEntry, fk(activity_id, TimeEntryActivity))
Constraint(TimeEntryActivitiesProject, fk(project_id, Project))
Constraint(TimeEntryActivitiesProject, fk(activity_id, TimeEntryActivity))
Constraint(Version, fk(project_id, Project))
Constraint(Comment, fk(commented_id, Comment))
Constraint(Comment, fk(author_id, User))
Constraint(Journal, fk(user_id, User))
Constraint(Journal, fk(journable_id, Journal))
Constraint(Priority::InexistentPriority, fk(color_id, Color))
Constraint(Priority::InexistentPriority, fk(project_id, Project))
Constraint(Query, fk(project_id, Project))
Constraint(Query, fk(user_id, User))
Constraint(Query, fk(query_menu_item_id, MenuItems::QueryMenuItem))
Constraint(WikiRedirect, fk(wiki_id, Wiki))
Constraint(Enumeration, fk(project_id, Project))
Constraint(RolePermission, fk(role_id, Role))
Constraint(Principal, fk(preference_id, UserPreference))
Constraint(MenuItem, fk(parent_id, MenuItem))
Constraint(MemberRole, fk(member_id, Member))
Constraint(MemberRole, fk(role_id, Role))
Constraint(CustomValue, fk(custom_field_id, CustomField))
Constraint(CustomValue, fk(customized_id, CustomValue))
Constraint(User, fk(rss_token_id, User))
Constraint(User, fk(api_token_id, User))
Constraint(User, fk(auth_source_id, AuthSource))
Constraint(User, fk(preference_id, UserPreference))
Constraint(Journal::CostObjectJournal, fk(journal_id, Journal))
Constraint(Journal::CostObjectJournal, fk(author_id, User))
Constraint(CostEntry, fk(project_id, Project))
Constraint(CostEntry, fk(work_package_id, WorkPackage))
Constraint(CostEntry, fk(user_id, User))
Constraint(CostEntry, fk(cost_type_id, CostType))
Constraint(CostEntry, fk(cost_object_id, CostObject))
Constraint(CostEntry, fk(rate_id, CostRate))
Constraint(TimeEntry, fk(project_id, Project))
Constraint(TimeEntry, fk(work_package_id, WorkPackage))
Constraint(TimeEntry, fk(user_id, User))
Constraint(TimeEntry, fk(activity_id, TimeEntryActivity))
Constraint(WorkPackage, fk(project_id, Project))
Constraint(WorkPackage, fk(type_id, WorkPackage))
Constraint(WorkPackage, fk(status_id, Status))
Constraint(WorkPackage, fk(author_id, User))
Constraint(WorkPackage, fk(assigned_to_id, Principal))
Constraint(WorkPackage, fk(responsible_id, Principal))
Constraint(WorkPackage, fk(version_id, Version))
Constraint(WorkPackage, fk(priority_id, IssuePriority))
Constraint(WorkPackage, fk(category_id, Category))
Constraint(WorkPackage, fk(project_id, Project))
Constraint(WorkPackage, fk(type_id, WorkPackage))
Constraint(WorkPackage, fk(status_id, Status))
Constraint(WorkPackage, fk(author_id, User))
Constraint(WorkPackage, fk(assigned_to_id, Principal))
Constraint(WorkPackage, fk(responsible_id, Principal))
Constraint(WorkPackage, fk(version_id, Version))
Constraint(WorkPackage, fk(priority_id, IssuePriority))
Constraint(WorkPackage, fk(category_id, Category))
Constraint(WorkPackage, fk(project_id, Project))
Constraint(WorkPackage, fk(type_id, WorkPackage))
Constraint(WorkPackage, fk(status_id, Status))
Constraint(WorkPackage, fk(author_id, User))
Constraint(WorkPackage, fk(assigned_to_id, Principal))
Constraint(WorkPackage, fk(responsible_id, Principal))
Constraint(WorkPackage, fk(version_id, Version))
Constraint(WorkPackage, fk(priority_id, IssuePriority))
Constraint(WorkPackage, fk(category_id, Category))
Constraint(CostRate, fk(cost_type_id, CostType))
Constraint(CostRate, fk(user_id, User))
Constraint(CostRate, fk(project_id, Project))
Constraint(LaborBudgetItem, fk(cost_object_id, CostObject))
Constraint(LaborBudgetItem, fk(user_id, User))
Constraint(LaborBudgetItem, fk(principal_id, Principal))
Constraint(DefaultHourlyRate, fk(user_id, User))
Constraint(DefaultHourlyRate, fk(project_id, Project))
Constraint(VariableCostObject, fk(author_id, User))
Constraint(VariableCostObject, fk(project_id, Project))
Constraint(MaterialBudgetItem, fk(cost_object_id, CostObject))
Constraint(MaterialBudgetItem, fk(cost_type_id, CostType))
Constraint(Rate, fk(user_id, User))
Constraint(Rate, fk(project_id, Project))
Constraint(CostObject, fk(author_id, User))
Constraint(CostObject, fk(project_id, Project))
Constraint(CostEntry, fk(project_id, Project))
Constraint(CostEntry, fk(work_package_id, WorkPackage))
Constraint(CostEntry, fk(user_id, User))
Constraint(CostEntry, fk(cost_type_id, CostType))
Constraint(CostEntry, fk(cost_object_id, CostObject))
Constraint(CostEntry, fk(rate_id, CostRate))
Constraint(HourlyRate, fk(user_id, User))
Constraint(HourlyRate, fk(project_id, Project))
Constraint(FixedCostObject, fk(author_id, User))
Constraint(FixedCostObject, fk(project_id, Project))
Constraint(Sprint, fk(project_id, Project))
Constraint(VersionSetting, fk(project_id, Project))
Constraint(VersionSetting, fk(version_id, Version))
Constraint(Impediment, fk(project_id, Project))
Constraint(Impediment, fk(type_id, WorkPackage))
Constraint(Impediment, fk(status_id, Status))
Constraint(Impediment, fk(author_id, User))
Constraint(Impediment, fk(assigned_to_id, Principal))
Constraint(Impediment, fk(responsible_id, Principal))
Constraint(Impediment, fk(version_id, Version))
Constraint(Impediment, fk(priority_id, IssuePriority))
Constraint(Impediment, fk(category_id, Category))
Constraint(Story, fk(project_id, Project))
Constraint(Story, fk(type_id, WorkPackage))
Constraint(Story, fk(status_id, Status))
Constraint(Story, fk(author_id, User))
Constraint(Story, fk(assigned_to_id, Principal))
Constraint(Story, fk(responsible_id, Principal))
Constraint(Story, fk(version_id, Version))
Constraint(Story, fk(priority_id, IssuePriority))
Constraint(Story, fk(category_id, Category))
Constraint(Task, fk(project_id, Project))
Constraint(Task, fk(type_id, WorkPackage))
Constraint(Task, fk(status_id, Status))
Constraint(Task, fk(author_id, User))
Constraint(Task, fk(assigned_to_id, Principal))
Constraint(Task, fk(responsible_id, Principal))
Constraint(Task, fk(version_id, Version))
Constraint(Task, fk(priority_id, IssuePriority))
Constraint(Task, fk(category_id, Category))
Constraint(Grids::Widget, fk(grid_id, Grid))
Constraint(PrincipalRole, fk(principal_id, Principal))
Constraint(PrincipalRole, fk(role_id, Role))
Constraint(Recaptcha::Entry, fk(user_id, User))
Constraint(Journal::MeetingContentJournal, fk(meeting_id, Meeting))
Constraint(Journal::MeetingContentJournal, fk(author_id, User))
Constraint(Journal::MeetingContentJournal, fk(journal_id, Journal))
Constraint(Journal::MeetingJournal, fk(author_id, User))
Constraint(Journal::MeetingJournal, fk(journal_id, Journal))
Constraint(MeetingContent, fk(meeting_id, Meeting))
Constraint(MeetingContent, fk(author_id, User))
Constraint(Meeting, fk(project_id, Project))
Constraint(Meeting, fk(author_id, User))
Constraint(Meeting, fk(agenda_id, MeetingAgenda))
Constraint(Meeting, fk(minutes_id, MeetingMinutes))
Constraint(MeetingAgenda, fk(meeting_id, Meeting))
Constraint(MeetingAgenda, fk(author_id, User))
Constraint(MeetingMinutes, fk(meeting_id, Meeting))
Constraint(MeetingMinutes, fk(author_id, User))
Constraint(MeetingParticipant, fk(meeting_id, Meeting))
Constraint(MeetingParticipant, fk(user_id, User))
Constraint(Grids::MyPage, fk(user_id, User))
Constraint(Grids::Dashboard, fk(project_id, Project))
Constraint(Boards::Grid, fk(project_id, Project))
Constraint(Bim::IfcModels::IfcModel, fk(project_id, Project))
Constraint(Bim::IfcModels::IfcModel, fk(uploader_id, User))
Constraint(Bim::Bcf::Issue, fk(work_package_id, WorkPackage))
Constraint(Bim::Bcf::Issue, fk(project_id, Project))
Constraint(Bim::Bcf::Viewpoint, fk(issue_id, Bim::Bcf::Issue))
Constraint(Bim::Bcf::Comment, fk(journal_id, Journal))
Constraint(Bim::Bcf::Comment, fk(issue_id, Bim::Bcf::Issue))
Constraint(Bim::Bcf::Comment, fk(viewpoint_id, Bim::Bcf::Viewpoint))
Constraint(Grids::Overview, fk(project_id, Project))
Constraint(Journal::DocumentJournal, fk(journal_id, Journal))
Constraint(Journal::DocumentJournal, fk(author_id, User))
Constraint(DocumentCategory, fk(project_id, Project))
Constraint(Document, fk(project_id, Project))
Constraint(Document, fk(category_id, DocumentCategory))
Constraint(LdapGroups::Membership, fk(user_id, User))
Constraint(LdapGroups::Membership, fk(group_id, ::LdapGroups::SynchronizedGroup))
Constraint(LdapGroups::SynchronizedGroup, fk(group_id, Group))
Constraint(LdapGroups::SynchronizedGroup, fk(auth_source_id, AuthSource))
Constraint(Webhooks::Project, fk(webhook_id, Webhook))
Constraint(Webhooks::Project, fk(project_id, ::Project))
Constraint(Webhooks::Log, fk(webhook_id, ::Webhooks::Webhook))
Constraint(Webhooks::Event, fk(webhook_id, Webhook))
Constraint(TwoFactorAuthentication::Device, fk(user_id, User))
Constraint(TwoFactorAuthentication::Device::Sms, fk(user_id, User))
Constraint(TwoFactorAuthentication::Device::Totp, fk(user_id, User))
Constraint(Announcement, presence(show_until))
Constraint(Attachment, presence(author))
Constraint(Attachment, presence(content_type))
Constraint(Attachment, presence(filesize))
Constraint(AttributeHelpText, presence(help_text))
Constraint(AttributeHelpText, unique([attribute_name, type]))
Constraint(AuthSource, unique([name]))
Constraint(Category, unique([name, project_id]))
Constraint(Change, presence(changeset_id))
Constraint(Change, presence(action))
Constraint(Change, presence(path))
Constraint(Changeset, presence(repository_id))
Constraint(Changeset, presence(revision))
Constraint(Changeset, presence(committed_on))
Constraint(Changeset, presence(commit_date))
Constraint(Changeset, unique([repository_id, scmid]))
Constraint(Color, presence(name))
Constraint(Color, presence(hexcode))
Constraint(Comment, presence(commented))
Constraint(Comment, presence(author))
Constraint(Comment, presence(comments))
Constraint(CustomField, presence(field_format))
Constraint(CustomField, presence(name))
Constraint(CustomOption, presence(value))
Constraint(DesignColor, unique([variable]))
Constraint(DesignColor, presence(hexcode))
Constraint(DesignColor, presence(variable))
Constraint(EnabledModule, presence(name))
Constraint(EnabledModule, unique([name, project_id]))
Constraint(EnterpriseToken, presence(encoded_token))
Constraint(Enumeration, presence(name))
Constraint(Enumeration, unique([name, type, project_id]))
Constraint(Forum, presence(name))
Constraint(Forum, presence(description))
Constraint(Group, presence(groupname))
Constraint(Journal, unique([journable_id, journable_type, version]))
Constraint(LdapAuthSource, presence(host))
Constraint(LdapAuthSource, presence(port))
Constraint(LdapAuthSource, presence(attr_login))
Constraint(LegacyJournal, unique([journaled_id, type, version]))
Constraint(Member, presence(project))
Constraint(Member, presence(principal))
Constraint(Member, unique([project_id, user_id]))
Constraint(MemberRole, presence(role))
Constraint(MenuItem, presence(title))
Constraint(MenuItem, unique([navigatable_id, type, title]))
Constraint(MenuItem, presence(name))
Constraint(MenuItem, unique([name, navigatable_id, parent_id]))
Constraint(Message, presence(forum))
Constraint(Message, presence(subject))
Constraint(Message, presence(content))
Constraint(News, presence(title))
Constraint(Project, presence(name))
Constraint(Project, presence(identifier))
Constraint(Project, unique([identifier]))
Constraint(Query, presence(name))
Constraint(Role, presence(name))
Constraint(Role, unique([name]))
Constraint(RolePermission, presence(permission))
Constraint(Setting, unique([name]))
Constraint(Status, presence(name))
Constraint(Status, unique([name]))
Constraint(TimeEntry, presence(user_id))
Constraint(TimeEntry, presence(activity_id))
Constraint(TimeEntry, presence(project_id))
Constraint(TimeEntry, presence(hours))
Constraint(TimeEntry, presence(spent_on))
Constraint(TokenBase, unique([value]))
Constraint(User, presence(login))
Constraint(User, presence(firstname))
Constraint(User, presence(lastname))
Constraint(User, presence(mail))
Constraint(User, unique([login]))
Constraint(User, unique([mail]))
Constraint(UserPreference, presence(user))
Constraint(Version, presence(name))
Constraint(Version, unique([name, project_id]))
Constraint(Watcher, presence(watchable))
Constraint(Watcher, presence(user))
Constraint(Watcher, unique([user_id, watchable_type, watchable_id]))
Constraint(Wiki, presence(start_page))
Constraint(WikiPage, presence(title))
Constraint(WikiRedirect, presence(title))
Constraint(WikiRedirect, presence(redirects_to))
Constraint(Workflow, presence(role))
Constraint(Workflow, presence(old_status))
Constraint(Workflow, presence(new_status))
Constraint(VersionSetting, presence(project))
Constraint(Bim::BcfComment, unique([issue_id, uuid]))
Constraint(CostEntry, presence(work_package_id))
Constraint(CostEntry, presence(project_id))
Constraint(CostEntry, presence(user_id))
Constraint(CostEntry, presence(cost_type_id))
Constraint(CostEntry, presence(units))
Constraint(CostEntry, presence(spent_on))
Constraint(CostObject, presence(subject))
Constraint(CostObject, presence(project))
Constraint(CostObject, presence(author))
Constraint(CostObject, presence(kind))
Constraint(CostObject, presence(fixed_date))
Constraint(CostRate, unique([cost_type_id, valid_from]))
Constraint(CostType, presence(name))
Constraint(CostType, presence(unit))
Constraint(CostType, presence(unit_plural))
Constraint(CostType, unique([name]))
Constraint(DefaultHourlyRate, unique([user_id, valid_from]))
Constraint(DefaultHourlyRate, presence(user_id))
Constraint(DefaultHourlyRate, presence(valid_from))
Constraint(HourlyRate, unique([project_id, user_id, valid_from]))
Constraint(HourlyRate, presence(user_id))
Constraint(HourlyRate, presence(project_id))
Constraint(HourlyRate, presence(valid_from))
Constraint(LaborBudgetItem, presence(user))
Constraint(LaborBudgetItem, presence(cost_object))
Constraint(MaterialBudgetItem, presence(cost_type))
Constraint(Document, presence(project))
Constraint(Document, presence(title))
Constraint(Document, presence(category))
Constraint(RowsYamlValidator, presence(name))
Constraint(WebhooksWebhook, unique([name]))
