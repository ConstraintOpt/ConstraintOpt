Constraint(ProjectCustomAttribute, fk(project_id, Project))
Constraint(UsersStarProject, fk(project_id, Project))
Constraint(UsersStarProject, fk(user_id, User))
Constraint(MergeRequestDiff, fk(merge_request_id, MergeRequest))
Constraint(AuditEvent, fk(user_id, User))
Constraint(Identity, fk(user_id, User))
Constraint(Evidence, fk(release_id, Release))
Constraint(Note, fk(project_id, Project))
Constraint(Note, fk(noteable_id, Note))
Constraint(Note, fk(author_id, User))
Constraint(Note, fk(updated_by_id, User))
Constraint(Note, fk(last_edited_by_id, User))
Constraint(Note, fk(system_note_metadata_id, Note))
Constraint(Note, fk(note_diff_file_id, NoteDiffFile))
Constraint(LabelNote, fk(project_id, Project))
Constraint(LabelNote, fk(noteable_id, Note))
Constraint(LabelNote, fk(author_id, User))
Constraint(LabelNote, fk(updated_by_id, User))
Constraint(LabelNote, fk(last_edited_by_id, User))
Constraint(LabelNote, fk(system_note_metadata_id, Note))
Constraint(LabelNote, fk(note_diff_file_id, NoteDiffFile))
Constraint(ExternalPullRequest, fk(project_id, Project))
Constraint(ReleasesLink, fk(release_id, Release))
Constraint(RedirectRoute, fk(source_id, RedirectRoute))
Constraint(ProjectAuthorization, fk(user_id, User))
Constraint(ProjectAuthorization, fk(project_id, Project))
Constraint(Project, fk(pool_repository_id, PoolRepository))
Constraint(Project, fk(creator_id, User))
Constraint(Project, fk(group_id, Group))
Constraint(Project, fk(namespace_id, Namespace))
Constraint(Project, fk(last_event_id, Event))
Constraint(Project, fk(campfire_service_id, CampfireService))
Constraint(Project, fk(discord_service_id, DiscordService))
Constraint(Project, fk(drone_ci_service_id, DroneCiService))
Constraint(Project, fk(emails_on_push_service_id, EmailsOnPushService))
Constraint(Project, fk(pipelines_email_service_id, PipelinesEmailService))
Constraint(Project, fk(irker_service_id, IrkerService))
Constraint(Project, fk(pivotaltracker_service_id, PivotaltrackerService))
Constraint(Project, fk(hipchat_service_id, HipchatService))
Constraint(Project, fk(flowdock_service_id, FlowdockService))
Constraint(Project, fk(assembla_service_id, AssemblaService))
Constraint(Project, fk(asana_service_id, AsanaService))
Constraint(Project, fk(mattermost_slash_commands_service_id, MattermostSlashCommandsService))
Constraint(Project, fk(mattermost_service_id, MattermostService))
Constraint(Project, fk(slack_slash_commands_service_id, SlackSlashCommandsService))
Constraint(Project, fk(slack_service_id, SlackService))
Constraint(Project, fk(buildkite_service_id, BuildkiteService))
Constraint(Project, fk(bamboo_service_id, BambooService))
Constraint(Project, fk(teamcity_service_id, TeamcityService))
Constraint(Project, fk(pushover_service_id, PushoverService))
Constraint(Project, fk(jira_service_id, JiraService))
Constraint(Project, fk(redmine_service_id, RedmineService))
Constraint(Project, fk(youtrack_service_id, YoutrackService))
Constraint(Project, fk(custom_issue_tracker_service_id, CustomIssueTrackerService))
Constraint(Project, fk(bugzilla_service_id, BugzillaService))
Constraint(Project, fk(gitlab_issue_tracker_service_id, GitlabIssueTrackerService))
Constraint(Project, fk(external_wiki_service_id, ExternalWikiService))
Constraint(Project, fk(prometheus_service_id, PrometheusService))
Constraint(Project, fk(mock_ci_service_id, MockCiService))
Constraint(Project, fk(mock_deployment_service_id, MockDeploymentService))
Constraint(Project, fk(mock_monitoring_service_id, MockMonitoringService))
Constraint(Project, fk(microsoft_teams_service_id, MicrosoftTeamsService))
Constraint(Project, fk(packagist_service_id, PackagistService))
Constraint(Project, fk(hangouts_chat_service_id, HangoutsChatService))
Constraint(Project, fk(root_of_fork_network_id, ForkNetwork))
Constraint(Project, fk(fork_network_member_id, ForkNetworkMember))
Constraint(Project, fk(fork_network_id, ForkNetwork))
Constraint(Project, fk(forked_from_project_id, Project))
Constraint(Project, fk(import_state_id, ProjectImportState))
Constraint(Project, fk(import_export_upload_id, ImportExportUpload))
Constraint(Project, fk(project_repository_id, ProjectRepository))
Constraint(Project, fk(error_tracking_setting_id, ErrorTrackingProjectErrorTrackingSetting))
Constraint(Project, fk(metrics_setting_id, ProjectMetricsSetting))
Constraint(Project, fk(grafana_integration_id, GrafanaIntegration))
Constraint(Project, fk(import_data_id, ProjectImportData))
Constraint(Project, fk(project_feature_id, ProjectFeature))
Constraint(Project, fk(statistics_id, ProjectStatistics))
Constraint(Project, fk(cluster_project_id, ClustersProject))
Constraint(Project, fk(auto_devops_id, ProjectAutoDevops))
Constraint(Project, fk(ci_cd_settings_id, ProjectCiCdSetting))
Constraint(Project, fk(pages_metadatum_id, ProjectPagesMetadatum))
Constraint(ImportExportUpload, fk(project_id, Project))
Constraint(NoteDiffFile, fk(diff_note_id, DiffNote))
Constraint(ErrorTrackingProjectErrorTrackingSetting, fk(project_id, Project))
Constraint(PushEventPayload, fk(event_id, Event))
Constraint(UserAgentDetail, fk(subject_id, UserAgentDetail))
Constraint(RemoteMirror, fk(project_id, Project))
Constraint(UserInteractedProject, fk(user_id, User))
Constraint(UserInteractedProject, fk(project_id, Project))
Constraint(DiffNote, fk(project_id, Project))
Constraint(DiffNote, fk(noteable_id, Note))
Constraint(DiffNote, fk(author_id, User))
Constraint(DiffNote, fk(updated_by_id, User))
Constraint(DiffNote, fk(last_edited_by_id, User))
Constraint(DiffNote, fk(system_note_metadata_id, Note))
Constraint(DiffNote, fk(note_diff_file_id, NoteDiffFile))
Constraint(Identity, fk(user_id, User))
Constraint(DeployKeysProject, fk(project_id, Project))
Constraint(DeployKeysProject, fk(deploy_key_id, DeployKey))
Constraint(SlackSlashCommandsService, fk(project_id, Project))
Constraint(SlackSlashCommandsService, fk(service_hook_id, ServiceHook))
Constraint(PackagistService, fk(project_id, Project))
Constraint(PackagistService, fk(service_hook_id, ServiceHook))
Constraint(SlackService, fk(project_id, Project))
Constraint(SlackService, fk(service_hook_id, ServiceHook))
Constraint(CampfireService, fk(project_id, Project))
Constraint(CampfireService, fk(service_hook_id, ServiceHook))
Constraint(HipchatService, fk(project_id, Project))
Constraint(HipchatService, fk(service_hook_id, ServiceHook))
Constraint(IrkerService, fk(project_id, Project))
Constraint(IrkerService, fk(service_hook_id, ServiceHook))
Constraint(JiraTrackerData, fk(service_id, Service))
Constraint(MonitoringService, fk(project_id, Project))
Constraint(MonitoringService, fk(service_hook_id, ServiceHook))
Constraint(CiService, fk(project_id, Project))
Constraint(CiService, fk(service_hook_id, ServiceHook))
Constraint(PivotaltrackerService, fk(project_id, Project))
Constraint(PivotaltrackerService, fk(service_hook_id, ServiceHook))
Constraint(CustomIssueTrackerService, fk(project_id, Project))
Constraint(CustomIssueTrackerService, fk(service_hook_id, ServiceHook))
Constraint(MattermostSlashCommandsService, fk(project_id, Project))
Constraint(MattermostSlashCommandsService, fk(service_hook_id, ServiceHook))
Constraint(HangoutsChatService, fk(project_id, Project))
Constraint(HangoutsChatService, fk(service_hook_id, ServiceHook))
Constraint(AssemblaService, fk(project_id, Project))
Constraint(AssemblaService, fk(service_hook_id, ServiceHook))
Constraint(AsanaService, fk(project_id, Project))
Constraint(AsanaService, fk(service_hook_id, ServiceHook))
Constraint(ExternalWikiService, fk(project_id, Project))
Constraint(ExternalWikiService, fk(service_hook_id, ServiceHook))
Constraint(TeamcityService, fk(project_id, Project))
Constraint(TeamcityService, fk(service_hook_id, ServiceHook))
Constraint(MattermostService, fk(project_id, Project))
Constraint(MattermostService, fk(service_hook_id, ServiceHook))
Constraint(EmailsOnPushService, fk(project_id, Project))
Constraint(EmailsOnPushService, fk(service_hook_id, ServiceHook))
Constraint(DiscordService, fk(project_id, Project))
Constraint(DiscordService, fk(service_hook_id, ServiceHook))
Constraint(MockCiService, fk(project_id, Project))
Constraint(MockCiService, fk(service_hook_id, ServiceHook))
Constraint(RedmineService, fk(project_id, Project))
Constraint(RedmineService, fk(service_hook_id, ServiceHook))
Constraint(JiraService, fk(project_id, Project))
Constraint(JiraService, fk(service_hook_id, ServiceHook))
Constraint(PipelinesEmailService, fk(project_id, Project))
Constraint(PipelinesEmailService, fk(service_hook_id, ServiceHook))
Constraint(SlashCommandsService, fk(project_id, Project))
Constraint(SlashCommandsService, fk(service_hook_id, ServiceHook))
Constraint(FlowdockService, fk(project_id, Project))
Constraint(FlowdockService, fk(service_hook_id, ServiceHook))
Constraint(PushoverService, fk(project_id, Project))
Constraint(PushoverService, fk(service_hook_id, ServiceHook))
Constraint(MockDeploymentService, fk(project_id, Project))
Constraint(MockDeploymentService, fk(service_hook_id, ServiceHook))
Constraint(GitlabIssueTrackerService, fk(project_id, Project))
Constraint(GitlabIssueTrackerService, fk(service_hook_id, ServiceHook))
Constraint(IssueTrackerService, fk(project_id, Project))
Constraint(IssueTrackerService, fk(service_hook_id, ServiceHook))
Constraint(DroneCiService, fk(project_id, Project))
Constraint(DroneCiService, fk(service_hook_id, ServiceHook))
Constraint(ChatNotificationService, fk(project_id, Project))
Constraint(ChatNotificationService, fk(service_hook_id, ServiceHook))
Constraint(PrometheusService, fk(project_id, Project))
Constraint(PrometheusService, fk(service_hook_id, ServiceHook))
Constraint(YoutrackService, fk(project_id, Project))
Constraint(YoutrackService, fk(service_hook_id, ServiceHook))
Constraint(IssueTrackerData, fk(service_id, Service))
Constraint(MicrosoftTeamsService, fk(project_id, Project))
Constraint(MicrosoftTeamsService, fk(service_hook_id, ServiceHook))
Constraint(BuildkiteService, fk(project_id, Project))
Constraint(BuildkiteService, fk(service_hook_id, ServiceHook))
Constraint(BugzillaService, fk(project_id, Project))
Constraint(BugzillaService, fk(service_hook_id, ServiceHook))
Constraint(BuildsEmailService, fk(project_id, Project))
Constraint(BuildsEmailService, fk(service_hook_id, ServiceHook))
Constraint(BambooService, fk(project_id, Project))
Constraint(BambooService, fk(service_hook_id, ServiceHook))
Constraint(MockMonitoringService, fk(project_id, Project))
Constraint(MockMonitoringService, fk(service_hook_id, ServiceHook))
Constraint(Todo, fk(author_id, User))
Constraint(Todo, fk(note_id, Note))
Constraint(Todo, fk(project_id, Project))
Constraint(Todo, fk(group_id, Group))
Constraint(Todo, fk(target_id, Todo))
Constraint(Todo, fk(user_id, User))
Constraint(Todo, fk(issue_id, Issue))
Constraint(ForkNetwork, fk(root_project_id, Project))
Constraint(UserSyncedAttributesMetadata, fk(user_id, User))
Constraint(Milestone, fk(project_id, Project))
Constraint(Milestone, fk(group_id, Group))
Constraint(Namespace, fk(owner_id, User))
Constraint(Namespace, fk(parent_id, Namespace))
Constraint(Namespace, fk(chat_team_id, ChatTeam))
Constraint(Namespace, fk(root_storage_statistics_id, NamespaceRootStorageStatistics))
Constraint(Namespace, fk(aggregation_schedule_id, NamespaceAggregationSchedule))
Constraint(GpgKey, fk(user_id, User))
Constraint(ApplicationSetting, fk(instance_administration_project_id, Project))
Constraint(Issue, fk(project_id, Project))
Constraint(Issue, fk(moved_to_id, Issue))
Constraint(Issue, fk(duplicated_to_id, Issue))
Constraint(Issue, fk(closed_by_id, User))
Constraint(MergeRequestAssignee, fk(merge_request_id, MergeRequest))
Constraint(MergeRequestAssignee, fk(assignee_id, User))
Constraint(BoardGroupRecentVisit, fk(user_id, User))
Constraint(BoardGroupRecentVisit, fk(group_id, Group))
Constraint(BoardGroupRecentVisit, fk(board_id, Board))
Constraint(CiBuildTraceSection, fk(build_id, CiBuild))
Constraint(CiBuildTraceSection, fk(project_id, Project))
Constraint(CiBuildTraceSection, fk(section_name_id, CiBuildTraceSectionName))
Constraint(CiPipelineSchedule, fk(project_id, Project))
Constraint(CiPipelineSchedule, fk(owner_id, User))
Constraint(CiPipelineSchedule, fk(last_pipeline_id, CiPipeline))
Constraint(CiTrigger, fk(project_id, Project))
Constraint(CiTrigger, fk(owner_id, User))
Constraint(CiBuildRunnerSession, fk(build_id, CiBuild))
Constraint(CiStage, fk(project_id, Project))
Constraint(CiStage, fk(pipeline_id, Pipeline))
Constraint(CiPipelineScheduleVariable, fk(pipeline_schedule_id, PipelineSchedule))
Constraint(CiPipeline, fk(project_id, Project))
Constraint(CiPipeline, fk(user_id, User))
Constraint(CiPipeline, fk(auto_canceled_by_id, CiPipeline))
Constraint(CiPipeline, fk(pipeline_schedule_id, CiPipelineSchedule))
Constraint(CiPipeline, fk(merge_request_id, MergeRequest))
Constraint(CiPipeline, fk(external_pull_request_id, ExternalPullRequest))
Constraint(CiPipeline, fk(source_pipeline_id, CiSourcesPipeline))
Constraint(CiPipeline, fk(chat_data_id, CiPipelineChatData))
Constraint(CiPipeline, fk(triggered_by_pipeline_id, TriggeredByPipeline))
Constraint(CiPipeline, fk(source_job_id, SourceJob))
Constraint(CiPipelineVariable, fk(pipeline_id, Pipeline))
Constraint(CiRunnerNamespace, fk(runner_id, Runner))
Constraint(CiRunnerNamespace, fk(namespace_id, Namespace))
Constraint(CiRunnerNamespace, fk(group_id, Group))
Constraint(CiBuildNeed, fk(build_id, CiBuild))
Constraint(CiVariable, fk(project_id, Project))
Constraint(CiBuildTraceSectionName, fk(project_id, Project))
Constraint(CiJobArtifact, fk(project_id, Project))
Constraint(CiJobArtifact, fk(job_id, CiBuild))
Constraint(CiBridge, fk(project_id, Project))
Constraint(CiBridge, fk(trigger_request_id, TriggerRequest))
Constraint(CiGroupVariable, fk(group_id, Group))
Constraint(CiTriggerRequest, fk(trigger_id, Trigger))
Constraint(CiTriggerRequest, fk(pipeline_id, Pipeline))
Constraint(CiSourcesPipeline, fk(project_id, Project))
Constraint(CiSourcesPipeline, fk(pipeline_id, CiPipeline))
Constraint(CiSourcesPipeline, fk(source_project_id, Project))
Constraint(CiSourcesPipeline, fk(source_job_id, CommitStatus))
Constraint(CiSourcesPipeline, fk(source_pipeline_id, CiPipeline))
Constraint(CiBuildTraceChunk, fk(build_id, CiBuild))
Constraint(CiJobVariable, fk(job_id, CiBuild))
Constraint(CiBuild, fk(project_id, Project))
Constraint(CiBuild, fk(runner_id, Runner))
Constraint(CiBuild, fk(trigger_request_id, TriggerRequest))
Constraint(CiBuild, fk(erased_by_id, User))
Constraint(CiBuild, fk(deployment_id, Deployment))
Constraint(CiBuild, fk(_id, CiJobArtifact))
Constraint(CiBuild, fk(runner_session_id, CiBuildRunnerSession))
Constraint(CiRunnerProject, fk(runner_id, Runner))
Constraint(CiRunnerProject, fk(project_id, Project))
Constraint(CiBuildMetadata, fk(build_id, CommitStatus))
Constraint(CiBuildMetadata, fk(project_id, Project))
Constraint(CiRunner, fk(last_build_id, CiBuild))
Constraint(CiPipelineChatData, fk(chat_name_id, ChatName))
Constraint(Email, fk(user_id, User))
Constraint(SystemNoteMetadata, fk(note_id, Note))
Constraint(SystemNoteMetadata, fk(description_version_id, DescriptionVersion))
Constraint(ListUserPreference, fk(user_id, User))
Constraint(ListUserPreference, fk(list_id, List))
Constraint(ClustersProject, fk(cluster_id, ClustersCluster))
Constraint(ClustersProject, fk(project_id, Project))
Constraint(ClustersPlatformsKubernetes, fk(cluster_id, ClustersCluster))
Constraint(ClustersProvidersGcp, fk(cluster_id, ClustersCluster))
Constraint(ClustersProvidersAws, fk(cluster_id, ClustersCluster))
Constraint(ClustersProvidersAws, fk(created_by_user_id, User))
Constraint(ClustersGroup, fk(cluster_id, ClustersCluster))
Constraint(ClustersGroup, fk(group_id, Group))
Constraint(ClustersCluster, fk(user_id, User))
Constraint(ClustersCluster, fk(management_project_id, Project))
Constraint(ClustersCluster, fk(cluster_project_id, ClustersProject))
Constraint(ClustersCluster, fk(provider_gcp_id, ClustersProvidersGcp))
Constraint(ClustersCluster, fk(provider_aws_id, ClustersProvidersAws))
Constraint(ClustersCluster, fk(platform_kubernetes_id, ClustersPlatformsKubernetes))
Constraint(ClustersCluster, fk(application.association_name_id, application.to_s))
Constraint(ClustersApplicationsJupyter, fk(oauth_application_id, DoorkeeperApplication))
Constraint(ClustersApplicationsRunner, fk(runner_id, CiRunner))
Constraint(ClustersKubernetesNamespace, fk(cluster_project_id, ClustersProject))
Constraint(ClustersKubernetesNamespace, fk(cluster_id, ClustersCluster))
Constraint(ClustersKubernetesNamespace, fk(project_id, Project))
Constraint(ClustersKubernetesNamespace, fk(environment_id, Environment))
Constraint(ClustersKubernetesNamespace, fk(platform_kubernetes_id, PlatformKubernete))
Constraint(GrafanaIntegration, fk(project_id, Project))
Constraint(GpgKeySubkey, fk(gpg_key_id, GpgKey))
Constraint(UserCustomAttribute, fk(user_id, User))
Constraint(Environment, fk(project_id, Project))
Constraint(Environment, fk(last_deployment_id, Deployment))
Constraint(Environment, fk(last_visible_deployment_id, Deployment))
Constraint(Group, fk(owner_id, User))
Constraint(Group, fk(parent_id, Namespace))
Constraint(Group, fk(chat_team_id, ChatTeam))
Constraint(Group, fk(root_storage_statistics_id, NamespaceRootStorageStatistics))
Constraint(Group, fk(aggregation_schedule_id, NamespaceAggregationSchedule))
Constraint(ProjectRepository, fk(project_id, Project))
Constraint(NamespaceRootStorageStatistics, fk(namespace_id, Namespace))
Constraint(NamespaceRootStorageStatistics, fk(route_id, Route))
Constraint(NamespaceAggregationSchedule, fk(namespace_id, Namespace))
Constraint(InternalId, fk(project_id, Project))
Constraint(InternalId, fk(namespace_id, Namespace))
Constraint(OauthAccessToken, fk(resource_owner_id, User))
Constraint(OauthAccessToken, fk(application_id, OauthAccessToken))
Constraint(MergeRequestsClosingIssues, fk(merge_request_id, MergeRequest))
Constraint(MergeRequestsClosingIssues, fk(issue_id, Issue))
Constraint(SentNotification, fk(project_id, Project))
Constraint(SentNotification, fk(noteable_id, SentNotification))
Constraint(SentNotification, fk(recipient_id, User))
Constraint(ChatTeam, fk(namespace_id, Namespace))
Constraint(MergeRequestDiffFile, fk(merge_request_diff_id, MergeRequestDiff))
Constraint(GroupCustomAttribute, fk(group_id, Group))
Constraint(ZoomMeeting, fk(project_id, Project))
Constraint(ZoomMeeting, fk(issue_id, Issue))
Constraint(ProjectStatistics, fk(project_id, Project))
Constraint(ProjectStatistics, fk(namespace_id, Namespace))
Constraint(GenericCommitStatus, fk(user_id, User))
Constraint(GenericCommitStatus, fk(project_id, Project))
Constraint(GenericCommitStatus, fk(pipeline_id, CiPipeline))
Constraint(GenericCommitStatus, fk(auto_canceled_by_id, CiPipeline))
Constraint(ProjectLabel, fk(project_id, Project))
Constraint(AwardEmoji, fk(awardable_id, AwardEmoji))
Constraint(AwardEmoji, fk(user_id, User))
Constraint(ProjectMetricsSetting, fk(project_id, Project))
Constraint(PrometheusMetric, fk(project_id, Project))
Constraint(ProjectCiCdSetting, fk(project_id, Project))
Constraint(GpgSignature, fk(project_id, Project))
Constraint(GpgSignature, fk(gpg_key_id, GpgKey))
Constraint(GpgSignature, fk(gpg_key_subkey_id, GpgKeySubkey))
Constraint(Member, fk(created_by_id, User))
Constraint(Member, fk(user_id, User))
Constraint(Member, fk(source_id, Member))
Constraint(MergeRequest, fk(target_project_id, Project))
Constraint(MergeRequest, fk(source_project_id, Project))
Constraint(MergeRequest, fk(merge_user_id, User))
Constraint(MergeRequest, fk(merge_request_diff_id, MergeRequestDiff))
Constraint(MergeRequest, fk(latest_merge_request_diff_id, MergeRequestDiff))
Constraint(MergeRequest, fk(head_pipeline_id, CiPipeline))
Constraint(PushEvent, fk(author_id, User))
Constraint(PushEvent, fk(project_id, Project))
Constraint(PushEvent, fk(group_id, Group))
Constraint(PushEvent, fk(target_id, Event))
Constraint(PushEvent, fk(push_event_payload_id, PushEventPayload))
Constraint(ProjectGroupLink, fk(project_id, Project))
Constraint(ProjectGroupLink, fk(group_id, Group))
Constraint(MilestoneRelease, fk(milestone_id, Milestone))
Constraint(MilestoneRelease, fk(release_id, Release))
Constraint(UserCallout, fk(user_id, User))
Constraint(ProjectAutoDevops, fk(project_id, Project))
Constraint(CommitStatus, fk(user_id, User))
Constraint(CommitStatus, fk(project_id, Project))
Constraint(CommitStatus, fk(pipeline_id, CiPipeline))
Constraint(CommitStatus, fk(auto_canceled_by_id, CiPipeline))
Constraint(ResourceLabelEvent, fk(user_id, User))
Constraint(ResourceLabelEvent, fk(issue_id, Issue))
Constraint(ResourceLabelEvent, fk(merge_request_id, MergeRequest))
Constraint(ResourceLabelEvent, fk(label_id, Label))
Constraint(SecurityEvent, fk(user_id, User))
Constraint(ProjectDeployToken, fk(project_id, Project))
Constraint(ProjectDeployToken, fk(deploy_token_id, DeployToken))
Constraint(Snippet, fk(author_id, User))
Constraint(Snippet, fk(project_id, Project))
Constraint(PoolRepository, fk(source_project_id, Project))
Constraint(UserPreference, fk(user_id, User))
Constraint(MergeRequestDiffCommit, fk(merge_request_diff_id, MergeRequestDiff))
Constraint(ForkNetworkMember, fk(fork_network_id, ForkNetwork))
Constraint(ForkNetworkMember, fk(project_id, Project))
Constraint(ForkNetworkMember, fk(forked_from_project_id, Project))
Constraint(ProjectFeature, fk(project_id, Project))
Constraint(LfsObjectsProject, fk(project_id, Project))
Constraint(LfsObjectsProject, fk(lfs_object_id, LfsObject))
Constraint(IssueMetrics, fk(issue_id, Issue))
Constraint(LegacyDiffNote, fk(project_id, Project))
Constraint(LegacyDiffNote, fk(noteable_id, Note))
Constraint(LegacyDiffNote, fk(author_id, User))
Constraint(LegacyDiffNote, fk(updated_by_id, User))
Constraint(LegacyDiffNote, fk(last_edited_by_id, User))
Constraint(LegacyDiffNote, fk(system_note_metadata_id, Note))
Constraint(LegacyDiffNote, fk(note_diff_file_id, NoteDiffFile))
Constraint(ProjectHook, fk(project_id, Project))
Constraint(ServiceHook, fk(service_id, Service))
Constraint(WebHookLog, fk(web_hook_id, WebHook))
Constraint(Key, fk(user_id, User))
Constraint(ProjectSnippet, fk(project_id, Project))
Constraint(ProjectSnippet, fk(author_id, User))
Constraint(DescriptionVersion, fk(issue_id, Issue))
Constraint(DescriptionVersion, fk(merge_request_id, MergeRequest))
Constraint(UserStatus, fk(user_id, User))
Constraint(LabelPriority, fk(project_id, Project))
Constraint(LabelPriority, fk(label_id, Label))
Constraint(ApplicationSetting, fk(instance_administration_project_id, Project))
Constraint(Route, fk(source_id, Route))
Constraint(TrendingProject, fk(project_id, Project))
Constraint(AbuseReport, fk(reporter_id, User))
Constraint(AbuseReport, fk(user_id, User))
Constraint(DiscussionNote, fk(project_id, Project))
Constraint(DiscussionNote, fk(noteable_id, Note))
Constraint(DiscussionNote, fk(author_id, User))
Constraint(DiscussionNote, fk(updated_by_id, User))
Constraint(DiscussionNote, fk(last_edited_by_id, User))
Constraint(DiscussionNote, fk(system_note_metadata_id, Note))
Constraint(DiscussionNote, fk(note_diff_file_id, NoteDiffFile))
Constraint(TermAgreement, fk(term_id, TermAgreement))
Constraint(TermAgreement, fk(user_id, User))
Constraint(U2fRegistration, fk(user_id, User))
Constraint(GroupMember, fk(group_id, Group))
Constraint(GroupMember, fk(created_by_id, User))
Constraint(GroupMember, fk(user_id, User))
Constraint(GroupMember, fk(source_id, Member))
Constraint(ProjectMember, fk(project_id, Project))
Constraint(ProjectMember, fk(created_by_id, User))
Constraint(ProjectMember, fk(user_id, User))
Constraint(ProjectMember, fk(source_id, Member))
Constraint(OauthAccessGrant, fk(resource_owner_id, User))
Constraint(OauthAccessGrant, fk(application_id, OauthAccessGrant))
Constraint(AwsRole, fk(user_id, User))
Constraint(PersonalAccessToken, fk(user_id, User))
Constraint(ProjectPagesMetadatum, fk(project_id, Project))
Constraint(PagesDomain, fk(project_id, Project))
Constraint(List, fk(board_id, Board))
Constraint(List, fk(label_id, Label))
Constraint(BoardProjectRecentVisit, fk(user_id, User))
Constraint(BoardProjectRecentVisit, fk(project_id, Project))
Constraint(BoardProjectRecentVisit, fk(board_id, Board))
Constraint(GroupLabel, fk(group_id, Group))
Constraint(NotificationSetting, fk(user_id, User))
Constraint(NotificationSetting, fk(source_id, NotificationSetting))
Constraint(NotificationSetting, fk(project_id, Project))
Constraint(Release, fk(project_id, Project))
Constraint(Release, fk(author_id, User))
Constraint(Release, fk(evidence_id, Evidence))
Constraint(PersonalSnippet, fk(author_id, User))
Constraint(PersonalSnippet, fk(project_id, Project))
Constraint(RepositoryLanguage, fk(project_id, Project))
Constraint(RepositoryLanguage, fk(programming_language_id, ProgrammingLanguage))
Constraint(Suggestion, fk(note_id, Note))
Constraint(Subscription, fk(user_id, User))
Constraint(Subscription, fk(project_id, Project))
Constraint(Subscription, fk(subscribable_id, Subscription))
Constraint(Deployment, fk(project_id, Project))
Constraint(Deployment, fk(environment_id, Environment))
Constraint(Deployment, fk(cluster_id, ClustersCluster))
Constraint(Deployment, fk(user_id, User))
Constraint(Deployment, fk(deployable_id, Deployment))
Constraint(ProjectImportData, fk(project_id, Project))
Constraint(ProjectDailyStatistic, fk(project_id, Project))
Constraint(MergeRequestMetrics, fk(merge_request_id, MergeRequest))
Constraint(MergeRequestMetrics, fk(pipeline_id, CiPipeline))
Constraint(MergeRequestMetrics, fk(latest_closed_by_id, User))
Constraint(MergeRequestMetrics, fk(merged_by_id, User))
Constraint(SpamLog, fk(user_id, User))
Constraint(ChatName, fk(service_id, Service))
Constraint(ChatName, fk(user_id, User))
Constraint(Upload, fk(model_id, Upload))
Constraint(DeployKey, fk(user_id, User))
Constraint(PagesDomainAcmeOrder, fk(pages_domain_id, PagesDomain))
Constraint(LabelLink, fk(target_id, LabelLink))
Constraint(LabelLink, fk(label_id, Label))
Constraint(GroupBadge, fk(group_id, Group))
Constraint(ProjectBadge, fk(project_id, Project))
Constraint(ContainerRepository, fk(project_id, Project))
Constraint(Event, fk(author_id, User))
Constraint(Event, fk(project_id, Project))
Constraint(Event, fk(group_id, Group))
Constraint(Event, fk(target_id, Event))
Constraint(Event, fk(push_event_payload_id, PushEventPayload))
Constraint(GroupGroupLink, fk(shared_group_id, Group))
Constraint(GroupGroupLink, fk(shared_with_group_id, Group))
Constraint(IssueAssignee, fk(issue_id, Issue))
Constraint(IssueAssignee, fk(assignee_id, User))
Constraint(ProjectImportState, fk(project_id, Project))
Constraint(Board, fk(group_id, Group))
Constraint(Board, fk(project_id, Project))
Constraint(AnalyticsCycleAnalyticsProjectStage, fk(project_id, Project))
Constraint(Service, fk(project_id, Project))
Constraint(Service, fk(service_hook_id, ServiceHook))
Constraint(User, fk(namespace_id, Namespace))
Constraint(User, fk(user_synced_attributes_metadata_id, User))
Constraint(User, fk(aws_role_id, AwsRole))
Constraint(User, fk(abuse_report_id, AbuseReport))
Constraint(User, fk(accepted_term_id, User))
Constraint(User, fk(status_id, UserStatus))
Constraint(User, fk(user_preference_id, UserPreference))
Constraint(LfsFileLock, fk(project_id, Project))
Constraint(LfsFileLock, fk(user_id, User))
Constraint(Timelog, fk(issue_id, Issue))
Constraint(Timelog, fk(merge_request_id, MergeRequest))
Constraint(Timelog, fk(user_id, User))
Constraint(AbuseReport, presence(reporter))
Constraint(AbuseReport, presence(user))
Constraint(AbuseReport, presence(message))
Constraint(AbuseReport, unique([user_id]))
Constraint(ApplicationSetting, presence(uuid))
Constraint(ApplicationSetting, presence(session_expire_delay))
Constraint(ApplicationSetting, presence(recaptcha_site_key))
Constraint(ApplicationSetting, presence(recaptcha_private_key))
Constraint(ApplicationSetting, presence(akismet_api_key))
Constraint(ApplicationSetting, presence(unique_ips_limit_per_user))
Constraint(ApplicationSetting, presence(unique_ips_limit_time_window))
Constraint(ApplicationSetting, presence(plantuml_url))
Constraint(ApplicationSetting, presence(snowplow_collector_hostname))
Constraint(ApplicationSetting, presence(pendo_url))
Constraint(ApplicationSetting, presence(max_attachment_size))
Constraint(ApplicationSetting, presence(max_artifacts_size))
Constraint(ApplicationSetting, presence(default_artifacts_expire_in))
Constraint(ApplicationSetting, presence(container_registry_token_expire_delay))
Constraint(ApplicationSetting, presence(repository_storages))
Constraint(ApplicationSetting, presence(housekeeping_incremental_repack_period))
Constraint(ApplicationSetting, presence(housekeeping_full_repack_period))
Constraint(ApplicationSetting, presence(housekeeping_gc_period))
Constraint(ApplicationSetting, presence(terminal_max_session_time))
Constraint(ApplicationSetting, presence(polling_interval_multiplier))
Constraint(ApplicationSetting, presence(gitaly_timeout_default))
Constraint(ApplicationSetting, presence(gitaly_timeout_medium))
Constraint(ApplicationSetting, presence(gitaly_timeout_fast))
Constraint(ApplicationSetting, presence(diff_max_patch_bytes))
Constraint(ApplicationSetting, presence(asset_proxy_url))
Constraint(ApplicationSetting, presence(asset_proxy_secret_key))
Constraint(ApplicationSetting, presence(static_objects_external_storage_auth_token))
Constraint(ApplicationSetting, presence(allowed_key_types))
Constraint(ApplicationSetting, presence(external_authorization_service_default_label))
Constraint(ApplicationSetting, presence(external_auth_client_key))
Constraint(ApplicationSetting, presence(lets_encrypt_notification_email))
Constraint(AuditEvent, presence(author_id))
Constraint(AuditEvent, presence(entity_id))
Constraint(AuditEvent, presence(entity_type))
Constraint(AwardEmoji, presence(awardable))
Constraint(AwardEmoji, presence(user))
Constraint(AwardEmoji, presence(name))
Constraint(AwardEmoji, unique([awardable_id, user, awardable_type, name]))
Constraint(AwsRole, unique([role_external_id]))
Constraint(Badge, presence(type))
Constraint(GroupBadge, presence(group))
Constraint(ProjectBadge, presence(project))
Constraint(Board, presence(project))
Constraint(Board, presence(group))
Constraint(BoardGroupRecentVisit, presence(user))
Constraint(BoardGroupRecentVisit, presence(group))
Constraint(BoardGroupRecentVisit, presence(board))
Constraint(BoardProjectRecentVisit, presence(user))
Constraint(BoardProjectRecentVisit, presence(project))
Constraint(BoardProjectRecentVisit, presence(board))
Constraint(BroadcastMessage, presence(message))
Constraint(BroadcastMessage, presence(starts_at))
Constraint(BroadcastMessage, presence(ends_at))
Constraint(ChatName, presence(user))
Constraint(ChatName, presence(service))
Constraint(ChatName, presence(team_id))
Constraint(ChatName, presence(chat_id))
Constraint(ChatName, unique([service_id, user_id]))
Constraint(ChatName, unique([chat_id, service_id, team_id]))
Constraint(ChatTeam, presence(team_id))
Constraint(ChatTeam, unique([namespace]))
Constraint(CiBuildTraceSectionName, unique([name, project_id]))
Constraint(CiGroupVariable, unique([group_id, key]))
Constraint(CiJobVariable, unique([job_id, key]))
Constraint(CiPipelineScheduleVariable, unique([key, pipeline_schedule_id]))
Constraint(CiPipelineVariable, unique([key, pipeline_id]))
Constraint(CiRunnerNamespace, unique([namespace_id, runner_id]))
Constraint(CiRunnerProject, unique([project_id, runner_id]))
Constraint(CiTrigger, unique([token]))
Constraint(CiVariable, unique([environment_scope, project_id, key]))
Constraint(ClustersKubernetesNamespace, unique([cluster_id, project_id, environment_id]))
Constraint(CommitStatus, presence(pipeline))
Constraint(CommitStatus, presence(name))
Constraint(ContainerRepository, unique([name, project_id]))
Constraint(DeployKeysProject, presence(deploy_key))
Constraint(DeployKeysProject, unique([deploy_key_id, project_id]))
Constraint(DeployKeysProject, presence(project_id))
Constraint(Deployment, presence(sha))
Constraint(Deployment, presence(ref))
Constraint(DiffNote, presence(original_position))
Constraint(DiffNote, presence(position))
Constraint(DiffNote, presence(line_code))
Constraint(Email, presence(email))
Constraint(Email, unique([email]))
Constraint(Environment, presence(name))
Constraint(Environment, unique([name, project_id]))
Constraint(Environment, presence(slug))
Constraint(Environment, unique([project_id, slug]))
Constraint(Event, presence(author_id))
Constraint(ExternalPullRequest, presence(source_branch))
Constraint(ExternalPullRequest, presence(target_branch))
Constraint(ExternalPullRequest, presence(source_sha))
Constraint(ExternalPullRequest, presence(target_sha))
Constraint(ExternalPullRequest, presence(source_repository))
Constraint(ExternalPullRequest, presence(target_repository))
Constraint(ExternalPullRequest, presence(status))
Constraint(ForkNetworkMember, presence(fork_network))
Constraint(ForkNetworkMember, presence(project))
Constraint(GpgKey, presence(user))
Constraint(GpgKey, presence(key))
Constraint(GpgKey, unique([key]))
Constraint(GpgKey, presence(fingerprint))
Constraint(GpgKey, unique([fingerprint]))
Constraint(GpgKey, presence(primary_keyid))
Constraint(GpgKey, unique([primary_keyid]))
Constraint(GpgKeySubkey, presence(gpg_key_id))
Constraint(GpgKeySubkey, presence(fingerprint))
Constraint(GpgKeySubkey, presence(keyid))
Constraint(GpgKeySubkey, unique([fingerprint]))
Constraint(GpgKeySubkey, unique([keyid]))
Constraint(GpgSignature, presence(commit_sha))
Constraint(GpgSignature, presence(project_id))
Constraint(GpgSignature, presence(gpg_key_primary_keyid))
Constraint(GrafanaIntegration, presence(token))
Constraint(GrafanaIntegration, presence(project))
Constraint(Group, presence(two_factor_grace_period))
Constraint(GroupCustomAttribute, presence(group))
Constraint(GroupCustomAttribute, presence(key))
Constraint(GroupCustomAttribute, presence(value))
Constraint(GroupCustomAttribute, unique([group_id, key]))
Constraint(GroupGroupLink, presence(shared_group))
Constraint(GroupGroupLink, unique([shared_group_id, shared_with_group_id]))
Constraint(GroupGroupLink, presence(shared_with_group))
Constraint(GroupGroupLink, presence(group_access))
Constraint(GroupLabel, presence(group))
Constraint(ProjectHook, presence(project))
Constraint(ServiceHook, presence(service))
Constraint(WebHook, presence(url))
Constraint(WebHookLog, presence(web_hook))
Constraint(Identity, presence(provider))
Constraint(Identity, unique([extern_uid]))
Constraint(Identity, unique([user]))
Constraint(InternalId, presence(usage))
Constraint(Issue, presence(project))
Constraint(Key, presence(title))
Constraint(Key, presence(key))
Constraint(Key, unique([fingerprint]))
Constraint(Label, presence(title))
Constraint(Label, unique([group_id, project_id, title]))
Constraint(LabelLink, presence(target))
Constraint(LabelLink, presence(label))
Constraint(LabelPriority, presence(project))
Constraint(LabelPriority, presence(label))
Constraint(LabelPriority, presence(priority))
Constraint(LabelPriority, unique([label_id, project_id]))
Constraint(LegacyDiffNote, presence(line_code))
Constraint(LfsFileLock, presence(project_id))
Constraint(LfsFileLock, presence(user_id))
Constraint(LfsFileLock, presence(path))
Constraint(LfsObject, presence(oid))
Constraint(LfsObject, unique([oid]))
Constraint(LfsObjectsProject, presence(lfs_object_id))
Constraint(LfsObjectsProject, unique([lfs_object_id, project_id, repository_type]))
Constraint(LfsObjectsProject, presence(project_id))
Constraint(List, presence(board))
Constraint(List, presence(list_type))
Constraint(List, presence(label))
Constraint(List, presence(position))
Constraint(List, unique([board_id, label_id]))
Constraint(ListUserPreference, presence(user))
Constraint(ListUserPreference, presence(list))
Constraint(ListUserPreference, unique([list_id, user_id]))
Constraint(Member, presence(user))
Constraint(Member, presence(source))
Constraint(Member, unique([source_id, source_type, user_id]))
Constraint(Member, presence(access_level))
Constraint(Member, unique([invite_email, source_type, source_id]))
Constraint(MergeRequest, presence(source_project))
Constraint(MergeRequest, presence(source_branch))
Constraint(MergeRequest, presence(target_project))
Constraint(MergeRequest, presence(target_branch))
Constraint(MergeRequest, presence(merge_user))
Constraint(MergeRequestsClosingIssues, unique([issue_id, merge_request_id]))
Constraint(MergeRequestsClosingIssues, presence(merge_request_id))
Constraint(MergeRequestsClosingIssues, presence(issue_id))
Constraint(Milestone, presence(group))
Constraint(Milestone, presence(project))
Constraint(Namespace, presence(owner))
Constraint(Namespace, presence(name))
Constraint(Namespace, presence(path))
Constraint(Note, presence(note))
Constraint(Note, presence(project))
Constraint(Note, presence(noteable_type))
Constraint(Note, presence(noteable_id))
Constraint(Note, presence(commit_id))
Constraint(Note, presence(author))
Constraint(Note, presence(discussion_id))
Constraint(NoteDiffFile, presence(diff_note))
Constraint(NotificationSetting, presence(user))
Constraint(NotificationSetting, presence(level))
Constraint(NotificationSetting, unique([source_id, source_type, user_id]))
Constraint(PagesDomain, unique([domain]))
Constraint(PagesDomain, presence(verification_code))
Constraint(PagesDomainAcmeOrder, presence(pages_domain))
Constraint(PagesDomainAcmeOrder, presence(expires_at))
Constraint(PagesDomainAcmeOrder, presence(url))
Constraint(PagesDomainAcmeOrder, presence(challenge_token))
Constraint(PagesDomainAcmeOrder, presence(challenge_file_content))
Constraint(PagesDomainAcmeOrder, presence(private_key))
Constraint(PersonalAccessToken, presence(scopes))
Constraint(PoolRepository, presence(source_project))
Constraint(ProgrammingLanguage, presence(name))
Constraint(Project, presence(creator))
Constraint(Project, presence(name))
Constraint(Project, presence(path))
Constraint(Project, presence(namespace))
Constraint(Project, unique([name, namespace_id]))
Constraint(Project, presence(repository_storage))
Constraint(ProjectAuthorization, presence(project))
Constraint(ProjectAuthorization, presence(access_level))
Constraint(ProjectAuthorization, unique([access_level, project, user]))
Constraint(ProjectAuthorization, presence(user))
Constraint(ProjectCustomAttribute, presence(project))
Constraint(ProjectCustomAttribute, presence(key))
Constraint(ProjectCustomAttribute, presence(value))
Constraint(ProjectCustomAttribute, unique([key, project_id]))
Constraint(ProjectDeployToken, presence(deploy_token))
Constraint(ProjectDeployToken, presence(project))
Constraint(ProjectDeployToken, unique([deploy_token_id, project_id]))
Constraint(ProjectFeature, presence(project))
Constraint(ProjectGroupLink, presence(project_id))
Constraint(ProjectGroupLink, presence(group))
Constraint(ProjectGroupLink, unique([group_id, project_id]))
Constraint(ProjectGroupLink, presence(group_access))
Constraint(ProjectImportData, presence(project))
Constraint(ProjectImportState, presence(project))
Constraint(ProjectLabel, presence(project))
Constraint(AsanaService, presence(api_key))
Constraint(AssemblaService, presence(token))
Constraint(BambooService, presence(bamboo_url))
Constraint(BambooService, presence(build_key))
Constraint(BambooService, presence(username))
Constraint(BambooService, presence(password))
Constraint(BugzillaService, presence(project_url))
Constraint(BugzillaService, presence(issues_url))
Constraint(BugzillaService, presence(new_issue_url))
Constraint(BuildkiteService, presence(project_url))
Constraint(BuildkiteService, presence(token))
Constraint(CampfireService, presence(token))
Constraint(ChatNotificationService, presence(webhook))
Constraint(CustomIssueTrackerService, presence(project_url))
Constraint(CustomIssueTrackerService, presence(issues_url))
Constraint(CustomIssueTrackerService, presence(new_issue_url))
Constraint(DroneCiService, presence(drone_url))
Constraint(DroneCiService, presence(token))
Constraint(EmailsOnPushService, presence(recipients))
Constraint(ExternalWikiService, presence(external_wiki_url))
Constraint(FlowdockService, presence(token))
Constraint(GitlabIssueTrackerService, presence(project_url))
Constraint(GitlabIssueTrackerService, presence(issues_url))
Constraint(GitlabIssueTrackerService, presence(new_issue_url))
Constraint(HipchatService, presence(token))
Constraint(IrkerService, presence(recipients))
Constraint(IssueTrackerData, presence(service))
Constraint(JiraService, presence(url))
Constraint(JiraService, presence(username))
Constraint(JiraService, presence(password))
Constraint(JiraTrackerData, presence(service))
Constraint(MockCiService, presence(mock_service_url))
Constraint(PackagistService, presence(username))
Constraint(PackagistService, presence(token))
Constraint(PipelinesEmailService, presence(recipients))
Constraint(PivotaltrackerService, presence(token))
Constraint(PushoverService, presence(api_key))
Constraint(PushoverService, presence(user_key))
Constraint(PushoverService, presence(priority))
Constraint(RedmineService, presence(project_url))
Constraint(RedmineService, presence(issues_url))
Constraint(RedmineService, presence(new_issue_url))
Constraint(TeamcityService, presence(teamcity_url))
Constraint(TeamcityService, presence(build_type))
Constraint(TeamcityService, presence(username))
Constraint(TeamcityService, presence(password))
Constraint(YoutrackService, presence(project_url))
Constraint(YoutrackService, presence(issues_url))
Constraint(ProjectSnippet, presence(project))
Constraint(PrometheusMetric, presence(title))
Constraint(PrometheusMetric, presence(query))
Constraint(PrometheusMetric, presence(group))
Constraint(PrometheusMetric, presence(y_label))
Constraint(PrometheusMetric, presence(unit))
Constraint(PrometheusMetric, presence(project))
Constraint(ProtectedTag, unique([name, project_id]))
Constraint(PushEvent, presence(project_id))
Constraint(PushEventPayload, presence(event_id))
Constraint(PushEventPayload, presence(commit_count))
Constraint(PushEventPayload, presence(action))
Constraint(PushEventPayload, presence(ref_type))
Constraint(RedirectRoute, presence(source))
Constraint(RedirectRoute, presence(path))
Constraint(RedirectRoute, unique([path]))
Constraint(Release, presence(description))
Constraint(Release, presence(project))
Constraint(Release, presence(tag))
Constraint(ReleasesLink, unique([release, url]))
Constraint(ReleasesLink, unique([name, release]))
Constraint(RemoteMirror, presence(url))
Constraint(RepositoryLanguage, presence(project))
Constraint(RepositoryLanguage, unique([programming_language, project_id]))
Constraint(Route, presence(source))
Constraint(Route, presence(path))
Constraint(Route, unique([path]))
Constraint(SentNotification, presence(recipient))
Constraint(SentNotification, presence(reply_key))
Constraint(SentNotification, unique([reply_key]))
Constraint(SentNotification, presence(noteable_id))
Constraint(SentNotification, presence(commit_id))
Constraint(Service, presence(project_id))
Constraint(Service, presence(type))
Constraint(Snippet, presence(author))
Constraint(Snippet, presence(title))
Constraint(Snippet, presence(content))
Constraint(SpamLog, presence(user))
Constraint(Subscription, presence(user))
Constraint(Subscription, presence(subscribable))
Constraint(Subscription, unique([project_id, subscribable_id, subscribable_type, user_id]))
Constraint(Suggestion, presence(note))
Constraint(Suggestion, presence(commit_id))
Constraint(SystemNoteMetadata, presence(note))
Constraint(TermAgreement, presence(user))
Constraint(TermAgreement, presence(term))
Constraint(Timelog, presence(time_spent))
Constraint(Timelog, presence(user))
Constraint(Todo, presence(action))
Constraint(Todo, presence(target_type))
Constraint(Todo, presence(user))
Constraint(Todo, presence(author))
Constraint(Todo, presence(target_id))
Constraint(Todo, presence(commit_id))
Constraint(Todo, presence(project))
Constraint(Todo, presence(group))
Constraint(Upload, presence(size))
Constraint(Upload, presence(path))
Constraint(Upload, presence(model))
Constraint(Upload, presence(uploader))
Constraint(User, presence(name))
Constraint(User, presence(notification_email))
Constraint(User, presence(public_email))
Constraint(User, unique([public_email]))
Constraint(User, presence(projects_limit))
Constraint(User, presence(username))
Constraint(User, presence(namespace))
Constraint(UserAgentDetail, presence(user_agent))
Constraint(UserAgentDetail, presence(ip_address))
Constraint(UserAgentDetail, presence(subject_id))
Constraint(UserAgentDetail, presence(subject_type))
Constraint(UserCallout, presence(user))
Constraint(UserCallout, presence(feature_name))
Constraint(UserCallout, unique([feature_name, user_id]))
Constraint(UserCustomAttribute, presence(user_id))
Constraint(UserCustomAttribute, presence(key))
Constraint(UserCustomAttribute, presence(value))
Constraint(UserCustomAttribute, unique([key, user_id]))
Constraint(UserInteractedProject, presence(project_id))
Constraint(UserInteractedProject, presence(user_id))
Constraint(UserPreference, presence(issue_notes_filter))
Constraint(UserPreference, presence(merge_request_notes_filter))
Constraint(UserStatus, presence(user))
Constraint(UserSyncedAttributesMetadata, presence(user))
Constraint(UsersStarProject, presence(user))
Constraint(UsersStarProject, unique([project_id, user_id]))
Constraint(UsersStarProject, presence(project))
Constraint(ZoomMeeting, presence(url))
